It is creational design pattern.

Let's say We have to create Object of Vehicle that could have multiple implementation say (Luxury Car, Ordinary Car)
Now we again have multiple implementation of these above both cars say (Mercedes, RollsRoyce, Hyundai, Swift)

As we can see we can easily able to separate these concrete classes into two ways. say(Luxury and Ordinary)

VehicleAbstractFactory will return VehicleFactory say (Luxury or Ordinary) and further

VehicleFactory will return object of concrete classes say(Mercedes, RollsRoyce, Hyundai, Swift)